kind: pipeline
type: exec
name: linux-amd64-test

platform:
  arch: amd64
  os: linux

steps:
- name: test
  commands:
  - contrib/hack/ci/test.sh
  environment:
    VERSION: ${DRONE_TAG:-latest}-linux-amd64
    DRONE_TAG: ${DRONE_TAG:-latest}
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
  when:
    event:
    - push
    - pull_request

---
kind: pipeline
type: exec
name: linux-amd64-docs

platform:
  arch: amd64
  os: linux

steps:
- name: build-docs
  commands:
  - mkdir -p docsite/.bundler
  - make docs
  - cd docsite/_site && echo "service-catalog.drycc.cc" >> CNAME && git init

- name: publish-docs
  commands:
  - chown -R root:root docsite/_site
  - docker run --rm
      -e DRONE_COMMIT_AUTHOR="$DRONE_COMMIT_AUTHOR"
      -e DRONE_COMMIT_AUTHOR_EMAIL="$DRONE_COMMIT_AUTHOR_EMAIL"
      -e PLUGIN_SSH_KEY="$SSH_DEPLOY_KEY"
      -e PLUGIN_BRANCH=main
      -e PLUGIN_REMOTE=git@github.com:drycc/service-catalog.drycc.cc.git
      -e PLUGIN_FORCE=true
      -e PLUGIN_COMMIT=true
      -e PLUGIN_PATH=docsite/_site
      -e PLUGIN_COMMIT_MESSAGE="init repo"
      -v "$(pwd):$(pwd)"
      -w "$(pwd)"
      appleboy/drone-git-push
  environment:
    SSH_DEPLOY_KEY:
      from_secret: ssh_deploy_key

trigger:
  event:
  - push
  - tag
depends_on:
- linux-amd64-test

---
kind: pipeline
type: exec
name: linux-amd64-test-e2e

platform:
  arch: amd64
  os: linux

steps:
- name: test-e2e
  commands:
  - make test-e2e
  when:
    event:
    - push
    - tag
    - pull_request

depends_on:
- linux-amd64-test

---
kind: pipeline
type: exec
name: linux-amd64-coverage

platform:
  arch: amd64
  os: linux

steps:
- name: make coverage
  commands:
  - make coverage
  when:
    event:
    - push
    - tag

- name: publish codecov
  commands:
  - curl -s https://codecov.io/bash | bash
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    status:
    - success

depends_on:
- linux-amd64-test

---
kind: pipeline
type: exec
name: linux-amd64-image

steps:
- name: make image
  commands:
  - echo $CONTAINER_PASSWORD | docker login $DRYCC_REGISTRY --username $CONTAINER_USERNAME --password-stdin > /dev/null 2>&1
  - make service-catalog-push
  environment:
    ARCH: amd64
    VERSION: ${DRONE_TAG:-latest}-linux-amd64
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password
  when:
    event:
    - push
    - tag

depends_on:
- linux-amd64-test

---
kind: pipeline
type: exec
name: linux-arm64-image

platform:
  arch: arm64
  os: linux

steps:
- name: make image
  commands:
  - echo $CONTAINER_PASSWORD | docker login $DRYCC_REGISTRY --username $CONTAINER_USERNAME --password-stdin > /dev/null 2>&1
  - make service-catalog-push
  environment:
    ARCH: arm64
    VERSION: ${DRONE_TAG:-latest}-linux-arm64
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password
  when:
    event:
    - push
    - tag

depends_on:
- linux-amd64-test

---
kind: pipeline
type: docker
name: manifest image
image_pull_secrets:
- container_pull_secrets

steps:
- name: generate manifest
  image: registry.drycc.cc/drycc/python-dev
  pull: always
  commands:
  - sed -i "s/registry.drycc.cc/$${DRYCC_REGISTRY}/g" .drone/manifest.tmpl
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish
  image: plugins/manifest
  settings:
    spec: .drone/manifest.tmpl
    username:
      from_secret: container_username
    password:
      from_secret: container_password
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

trigger:
  event:
  - push
  - tag

depends_on:
- linux-amd64-image
- linux-arm64-image

---
kind: pipeline
type: exec
name: output

steps:
- name: generate chart catalog
  commands:
  - IMAGE_TAG=$([ ! -z $DRONE_TAG ] && echo \"${DRONE_TAG:1}\" || echo \"canary\")
  - sed -i "s/image_tag:\ \"canary\"/image_tag:\ $IMAGE_TAG/g" charts/catalog/values.yaml
  - helm package charts/catalog --version $([ -z $DRONE_TAG ] && echo 1.0.0 || echo ${DRONE_TAG#v})
  - echo $CONTAINER_PASSWORD | helm registry login $DRYCC_REGISTRY -u $CONTAINER_USERNAME --password-stdin
  - helm push catalog-$([ -z $DRONE_TAG ] && echo 1.0.0 || echo ${DRONE_TAG#v}).tgz oci://$DRYCC_REGISTRY/$([ -z $DRONE_TAG ] && echo charts-testing || echo charts)
  environment:
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password
  when:
    event:
    - push
    - tag

- name: make svcat
  commands:
  - export TAG_VERSION=$DRONE_TAG
  - make svcat-all
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
  when:
    event: tag

- name: release svcat
  commands:
  - docker run --rm
      -e DRONE_BUILD_EVENT=tag
      -e DRONE_REPO_OWNER="$DRONE_REPO_OWNER"
      -e DRONE_REPO_NAME="$DRONE_REPO_NAME"
      -e PLUGIN_API_KEY="$API_KEY"
      -e PLUGIN_BASE_URL="https://api.github.com/"
      -e PLUGIN_UPLOAD_URL="https://uploads.github.com/"
      -e DRONE_COMMIT_REF="refs/tags/$DRONE_TAG"
      -e PLUGIN_OVERWRITE="true"
      -e PLUGIN_FILES="bin/svcat/*"
      -v $(pwd):$(pwd)
      -w $(pwd)
      docker.io/plugins/github-release
  environment:
    API_KEY:
      from_secret: github_token
  when:
    event:
    - tag

depends_on:
- linux-amd64-test

